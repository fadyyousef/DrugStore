@model DrugStore.ViewModels.UserVM

@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isAdmin = User.IsInRole("Admin");
    var isAdminLite = User.IsInRole("Admin Lite");
    var userRole = isAdmin ? (isAdminLite ? "Admin Lite" : "User") : "User";
}
<h2>Edit Profile</h2>
<hr />
@using (Html.BeginForm("EditProfile", "Home", FormMethod.Post, htmlAttributes: new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(mode => Model.CreatedBy)
    @Html.HiddenFor(mode => Model.CreatedDate)
    @Html.HiddenFor(mode => Model.UpdatedBy)
    @Html.HiddenFor(mode => Model.UpdatedDate)

    <div class="container">
        <div class="form-group">

            <div class="row row-striped">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">&nbsp;</div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row row-striped">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
                    @Html.LabelFor(a => a.UserName, "User Name", new { @class = "control-label" })
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left">
                    <div class="input-group">
                        <span class="input-group-addon" style="width: 40px;">
                            <i style="color: #3b5997" class="fa fa-wrench"></i>
                        </span>
                        @Html.TextBoxFor(a => a.UserName, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(a => a.UserName, null, new { @class = "control-label text-danger" })
                </div>
            </div>

            <div class="row row-striped">
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 text-right">
                    @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                </div>
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    <div class="input-group">
                        <span class="input-group-addon" style="width: 40px;">
                            <i style="color: #3b5997" class="fa fa-lock"></i>
                        </span>
                        @Html.TextBoxFor(a => a.Password,
                           new
                           {
                               @class = "form-control",
                               style = "display: inline-block",
                               id = "txtPassword",
                               type = "password",
                               name = "password"
                           })
                        <span style="color: #3b5997; display: inline-block; z-index: 999" class="fa fa-eye glyph">
                        </span>
                        @Html.ValidationMessageFor(a => a.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row row-striped">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
                    @Html.LabelFor(a => a.ConfirmPassword, "Confirm Password", new { @class = "control-label" })
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left">
                    <div class="input-group">
                        <span class="input-group-addon" style="width: 40px;">
                            <i style="color: #3b5997" class="fa fa-lock"></i>
                        </span>
                        @Html.TextBoxFor(a => a.ConfirmPassword,
                           new { @class = "form-control", id = "txtConfirmPassword", type = "password", name = "password" })
                    </div>
                    @Html.ValidationMessageFor(a => a.ConfirmPassword, null,
                                      new { @class = "text-danger", id = "ErrConfirmPassword" })
                </div>
            </div>

            <div class="row row-striped">
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 text-right">
                    @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                </div>
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    <div class="input-group">
                        <span class="input-group-addon" style="width: 40px;">
                            <i style="color: #3b5997" class="fa fa-check"></i>
                        </span>
                        <div class="checkbox" style="padding-left:35px;">
                            @if (isAdmin)
                            {
                                @Html.CheckBoxFor(model => model.IsActive, new { id = "chkActive", @class = "checkbox" })
                            }
                            else
                            {
                                @Html.CheckBoxFor(model => model.IsActive, new { id = "chkActive", @class = "checkbox", onclick = "return false;" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            @if (isAdmin)
            {
                <div class="row row-striped">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
                        @Html.LabelFor(a => a.FirstName, new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left">
                        <div class="input-group">
                            <span class="input-group-addon" style="width: 40px;"><i style="color: #3b5997" class="fa fa-info-circle"></i></span>
                            @Html.TextBoxFor(a => a.FirstName, new { @class = "form-control", maxlength = "25" })
                        </div>
                        @Html.ValidationMessageFor(a => a.FirstName, null, new { @class = "control-label text-danger" })
                    </div>
                </div>

                <div class="row row-striped">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
                        @Html.LabelFor(a => a.MiddleName, new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left">
                        <div class="input-group">
                            <span class="input-group-addon" style="width: 40px;"><i style="color: #3b5997" class="fa fa-info-circle"></i></span>
                            @Html.TextBoxFor(a => a.MiddleName, new { @class = "form-control", maxlength = "25" })
                        </div>
                        @Html.ValidationMessageFor(a => a.MiddleName, null, new { @class = "control-label text-danger" })
                    </div>
                </div>

                <div class="row row-striped">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
                        @Html.LabelFor(a => a.LastName, new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left">
                        <div class="input-group">
                            <span class="input-group-addon" style="width: 40px;"><i style="color: #3b5997" class="fa fa-info-circle"></i></span>
                            @Html.TextBoxFor(a => a.LastName, new { @class = "form-control", maxlength = "25" })
                        </div>
                        @Html.ValidationMessageFor(a => a.LastName, null, new { @class = "control-label text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(mode => Model.FullName)
            }
            else
            {
                @Html.HiddenFor(mode => Model.FirstName)
                @Html.HiddenFor(mode => Model.MiddleName)
                @Html.HiddenFor(mode => Model.LastName)

                <div class="row row-striped">
                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 text-right">
                        @Html.LabelFor(model => model.FullName, "Full Name ", new { @class = "control-label" })
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 text-left">
                        <div class="input-group">
                            <span class="input-group-addon" style="width: 40px;"><i style="color: #3b5997" class="fa fa-info"></i></span>
                            @Html.TextBoxFor(a => a.FullName, new { @class = "form-control", maxlength = "25", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="row row-striped">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
                    @Html.LabelFor(a => a.Email, new { @class = "control-label" })
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left">
                    <div class="input-group">
                        <span class="input-group-addon" style="width: 40px;"><i style="color: #3b5997" class="fa fa-envelope"></i></span>
                        @Html.TextBoxFor(a => a.Email, new { @class = "form-control", maxlength = "100", placeholder = "user@company.com" })
                    </div>
                    @Html.ValidationMessageFor(a => a.Email, null, new { @class = "control-label text-danger" })
                </div>
            </div>

            <div class="row row-striped">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right">
                    @Html.LabelFor(a => a.Phone, new { @class = "control-label" })
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left">
                    <div class="input-group">
                        <span class="input-group-addon" style="width: 40px;"><i style="color: #3b5997" class="fa fa-phone"></i></span>
                        @Html.TextBoxFor(a => a.Phone,
                                      new { @class = "form-control", id = "txtPhone", maxlength = "25" })
                    </div>
                    @Html.ValidationMessageFor(a => a.Phone, null, new { @class = "control-label text-danger" })
                </div>
            </div>

            <div class="row row-striped">
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 text-right">
                    @Html.LabelFor(model => userRole, "User Role", new { @class = "control-label" })
                </div>
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    <div class="input-group">
                        <span class="input-group-addon" style="width: 40px;">
                            <i style="color: #3b5997" class="fa fa-cog"></i>
                        </span>
                        @if (isAdmin)
                        {
                            @Html.DropDownListFor(m => m.SelectedUserRoleID,
                                Model.UserRoles, "--Select Role--", new { @class = "form-control" })
                        }
                        else if (isAdminLite)
                        {
                            @Html.TextBoxFor(model => userRole, "Admin Lite", new { @class = "form-control", @readonly = "readonly" })
                            @Html.HiddenFor(m => m.SelectedUserRoleID)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => userRole, "User", new { @class = "form-control", @readonly = "readonly" })
                            @Html.HiddenFor(m => m.SelectedUserRoleID)
                        }
                    </div>
                </div>
            </div>
            <br />
            <div class="row row-striped">
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 text-right">
                    @Html.ActionLink("Back to Home", "Index", null, new { @class = "btn btn-danger" })
                </div>
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>

        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        var isAdmin = @isAdmin.ToString().ToLower();
        if (isAdmin != false) {
            registerObj.toggleActive();
            $("#chkActive").on("click ready load", function () {
                registerObj.toggleActive();
            });
        }
        registerObj.validatePassword();
        registerObj.togglePassword();
        registerObj.validatePhone("txtPhone");
    });
</script>